/**
 * User API *  documentation
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *//* tslint:disable:no-unused-variable member-ordering */

import { Injectable } from '@angular/core';
import { HttpEvent, HttpResponse } from '@angular/common/http';

import { Observable } from 'rxjs';


import { ApiResourceService } from './apiResourceService';
import { TikTokCommentRs } from '../model/tiktok/tiktokCommentRs';
import { SendMessageRequest } from '../model/message/sendMessageRq';


@Injectable({
  providedIn: 'root'
})
export class MessageResourceService extends ApiResourceService {

  /**
   *
   *
   * @param observe set whether to return the data Observable as the body, response or events. defaults to returning the body.
   * @param reportProgress flag to report request and response progress.
   */
  public sendMessage(messageRs: SendMessageRequest, observe?: 'body', reportProgress?: boolean): Observable<any>;
  public sendMessage(messageRs: SendMessageRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
  public sendMessage(messageRs: SendMessageRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
  public sendMessage(messageRs: SendMessageRequest, observe: any = 'body', reportProgress?: boolean): Observable<any> {
    let headers = this.defaultHeaders;
    return this.httpClient.request<any>('post', `${this.basePath}/api/chat`, {
      body: messageRs,
      withCredentials: this.configuration.withCredentials,
      headers: headers,
      observe: observe,
      reportProgress: reportProgress
    });
  }

  public fetchHistory(
    payload: { session_id: string; user_id: string, agent: string },
    observe: 'body' = 'body',
    reportProgress?: boolean
  ): Observable<any> {
    let headers = this.defaultHeaders;

    return this.httpClient.request<any>(
      'post',
      `${this.basePath}/api/products`,
      {
        body: payload,
        withCredentials: this.configuration.withCredentials,
        headers: headers,
        observe: observe,
        reportProgress: reportProgress,
      }
    );
  }

}
